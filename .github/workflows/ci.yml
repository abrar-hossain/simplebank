name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U root -d simple_bank"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'   # same as you use locally

      - name: Go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: ~/go/bin/staticcheck ./...

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
          migrate -version

      - name: Wait for Postgres port
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && echo "Postgres is accepting TCP connections" && exit 0
            sleep 1
          done
          echo "Postgres not ready in time" && exit 1

      - name: Run migrations
        env:
          DB_SOURCE: postgresql://root:secret@127.0.0.1:5432/simple_bank?sslmode=disable
        run: make migrateup   # unchanged if your Makefile has 'migrateup'

      - name: Run tests with coverage
        env:
          DB_SOURCE: postgresql://root:secret@127.0.0.1:5432/simple_bank?sslmode=disable
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.out
          flags: unittests
          fail_ci_if_error: false   # don't fail build if Codecov is flaky
